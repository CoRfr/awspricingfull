{
  "name": "Awspricingfull: Full AWS Instance Pricing in CSV and JSON formats (EC2, RDS, ElastiCache, Redshift)",
  "tagline": "AWS instance pricing retrieval for EC2, RDS, ElastiCache and Redshift. On-Demand and Reserved pricing schemes covered both for previous and current generation instance types.",
  "body": "# awspricingfull.py\r\n\r\n------------------------------------------\r\n\r\n**MINOR UPDATE 03/24/2016 AND FUTURE DEVELOPMENT ROADMAP**\r\n\r\n**Update**\r\n\r\n* Seoul region (ap-northeast-2) is added to dictionaries\r\n* Tool is tested to produce accurate up-to-date results\r\n\r\n**Roadmap**\r\n\r\nAs there had been no AWS updates affecting pricing sheets since June 2015, I stopped the active development of the script and was just checking it from time to time. Moreover, **in December 2015 AWS introduced their own pricing API** which was a great thing.\r\nHowever, yesterday I had to update my work-related DBs with the new Seoul region pricing, and found out that AWS API implementation is not straightforward:\r\n\r\n* Every region should be accessed separately\r\n* Parsing needed\r\n* Overall, major development effort is neded to use the API\r\n\r\nThat is why I came back to my good old tool, added Seoul region into it, and found out that it still produces the top-notch results that I was able to use right away. At the sam=e time I decided to continue the development of the tool, and here is the roadmap for the nearest time:\r\n\r\n* DynamoDB pricing - OD and Reservations\r\n* Dictionary dependency fix - make the tool tolerate AWS changes (such as new regions introductions)\r\n\r\n**Please, let me know what else would be good to have in the resulting uniform output of the tool.**\r\n\r\n\r\n**P.S. Program is fully functional and up-to-date.**\r\n\r\n\r\n-------------------------------------\r\n\r\n**MAJOR UPDATE 06/19/2015: Version 2.0 of program**\r\n\r\n* New RDS pricing scheme is added (noUpfront, partialUpfront, allUpfront)\r\n* Thorough testing is performed and major bugs fixed:\r\n  * Redshift \"clean\" hourly price calculation (from monthly cost) is corrected following AWS correcting it on their pricing website\r\n  * Output pricing is checked by random sampling and proven to be accurate\r\n  * PrettyTable representation is now fully functional\r\n  * JSON functionality now returns the JSON string instead of just printing it to console\r\n  * Documentation is accurate and informative\r\n\r\n**Program is fully functional and up-to-date.**\r\n\r\n-------------------------------------\r\n\r\n\r\nhttp://ilia-semenov.github.io/awspricingfull\r\n\r\nWritten by Ilia Semenov (@ilia-semenov)\r\n\r\nBased on the project by Eran Sandler (@erans): https://github.com/erans/ec2instancespricing\r\n\r\nCompatibility: Python 2\r\n\r\nAWS instance pricing retrieval for EC2, RDS, ElastiCache and Redshift. On-Demand and Reserved pricing schemes covered both for previous and current generation instance types. Contains the most recent updates (new EC2 Reservation pricing scheme, D2 instances and more).\r\n\r\nModule is designed to retrieve the AWS prices for \r\nfour major AWS services that have reserved instances involved: EC2, ElastiCache, \r\nRDS and Redshift. The prices either On-Demand or Reserved (specified by user) can \r\nbe retrieved to Command Line in JSON, Table (Prettytable) or CSV formats. CSV format \r\noption also saves the csv file to the folder specified by user, which is the main \r\nuse case.\r\n\r\nThe module also contains the class which consolidates all the pricing data into a single structured JSON, Table or CSV output: all 4 services, reserved and On-Demand.\r\n\r\nThe undocumented AWS pricing APIs are used as the sources. The same APIs  serve\r\nthe data to the AWS pricing pages.\r\n\r\nBoth current and previous generation instance prices are retrieved.\r\n\r\n\r\nMore information and description of classes contained in the module can be found in Sphinx documentation HTML located at https://github.com/ilia-semenov/awspricingfull/tree/master/docs_html folder.\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}